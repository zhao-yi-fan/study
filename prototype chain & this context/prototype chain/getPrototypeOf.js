// q: 为什么{}.__proto__会报错
// a: {}.__proto__是一个语法错误，因为{}是一个字面量，不是一个对象，所以不能访问它的原型

// q: 那怎么访问{}的原型呢
// a: Object.getPrototypeOf({})

// q: getPrototypeOf什么时候用呢
// a: 当你想要访问一个对象的原型，但是这个对象不是你自己创建的，而是别人创建的，比如你想要访问一个DOM节点的原型，那么你就可以使用getPrototypeOf

// q: 那如果我不想让别人调用getPrototypeOf访问我的原型，怎么办
// a: 你可以使用Object.create(null)创建一个没有原型的对象，这样别人就无法访问你的原型了

// q: 那如果我想要让别人访问我的原型，但是我又不想让别人修改我的原型，怎么办
// a: 你可以使用Object.freeze()冻结你的原型，这样别人就无法修改你的原型了

// q: 那如果我想要让别人访问我的原型，但是我又不想让别人修改我的原型，而且我还想让别人访问我的原型的时候，能够自动执行一些代码，怎么办
// a: 你可以使用Object.defineProperty()定义一个属性，这个属性的get方法就是你想要执行的代码，这样别人就可以访问你的原型了，而且你的原型也是不可修改的
